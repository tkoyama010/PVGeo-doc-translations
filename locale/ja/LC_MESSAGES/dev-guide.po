# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2020, Bane Sullivan, http:://banesullivan.com
# This file is distributed under the same license as the PVGeo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PVGeo\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-26 19:18+0900\n"
"PO-Revision-Date: 2021-04-26 13:59+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/112279/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:6
msgid "Contributing"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:8
msgid "Thanks for taking the time to contribute!"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:10
msgid ""
"We absolutely welcome contributions and we hope that this guide will "
"facilitate an understanding of the *PVGeo* code repository. It is important "
"to note that the *PVGeo* software package is maintained on a volunteer basis"
" and thus we need to foster a community that can support user questions and "
"develop new features to make this software a useful tool for geoscientists."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:16
msgid ""
"This page is dedicated to outline where you should start with your question,"
" concern, feature request, or desire to contribute."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:20
msgid "Questions"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:22
msgid ""
"For general questions about the project, its applications, or about the non-"
"technical, please do not create an issue but join us on "
"[slack](http://slack.pvgeo.org) or send one of the developers an email. The "
"current project maintainer is Bane Sullivan, feel free to inquire with Bane "
"through `Banes website`_."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:28
msgid ""
"For more technical questions, you are welcome to create an issue on the "
"`issues page`_ with a *question* label which we will try to address. Through"
" posting on the issues page, your question can be addressed by community "
"members with the needed expertise and the information gained will remain "
"available on the issues page for other users."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:36
msgid "Reporting Bugs"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:38
msgid ""
"If you stumble across any bugs, crashes, or concerning quirks while using "
"code distributed here, please report it on the `issues page`_ with an "
"appropriate label so we can promptly address it. When reporting an issue, "
"please be overly descriptive so that we may reproduce it. Whenever possible,"
" please provide tracebacks, screenshots, and sample files to help us address"
" the issue."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:46
msgid "Feature Requests"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:48
msgid ""
"We encourage users to submit ideas for improvements to *PVGeo* code base! "
"Please create an issue on the `issues page`_ with a *Feature Request* label "
"to suggest an improvement. Please use a descriptive title and provide ample "
"background information to help the community implement that functionality. "
"For example, if you would like a reader for a specific file format, please "
"provide a link to documentation of that file format and possibly provide "
"some sample files with screenshots to work with. We will use the issue "
"thread as a place to discuss and provide feedback."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:58
msgid "Contributing New Code"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:60
msgid ""
"If you have an idea for how to improve *PVGeo*, please first create an issue"
" as a feature request which we can use as a discussion thread to work "
"through how to implement the contribution."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:64
msgid ""
"Once you are ready to start coding and develop for *PVGeo*, please take a "
"look at the remainder of the pages in this Development Guide."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:68
msgid "Licensing"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/contributing.rst:70
msgid ""
"All contributed code will be licensed under *PVGeos'* `license`_. If you did"
" not write the code yourself, it is your responsibility to ensure that the "
"existing license is compatible and included in the contributed files or you "
"can obtain permission from the original author to relicense the code."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:2
msgid "Project Structure"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:5
msgid "The Plugin Framework"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:8
msgid ""
"In developing the *PVGeo* repository, we decided to follow a framework of "
"development that generates various sets of tools that can be used within "
"ParaView or outside in other Python environments with the VTK Python "
"library. This would allow for users of *PVGeo* to be able to use all of the "
"functionality as plugins in ParaView with interactive user menus or outside "
"of ParaView be able to integrate with there existing data processing suites "
"using Python and VTK. This development framework also focuses heavily on the"
" open source paradigm in that *PVGeo* contains many base classes for "
"developers to inherit functionality to aid in the development of new "
"features. Unfortunately, the development of plugins for the ParaView "
"software platform may imply an ambitious programming endeavor, including "
"creating CMakeLists, developing in lower level programming languages like "
"C++, learning new libraries to create interactive GUI components, and "
"building the plugins into the ParaView source code. However, the *PVGeo* "
"module takes advantage of functionality by Kitware that facilitates the "
"rapid development of readers, sources, filters, and writers: instantiations "
"of the ``VTKPythonAlgorithmBase`` class in Python. Python is an accessible "
"language, easy to learn, and popular among geoscientists using packages "
"like: SimPEG, ObsPy, EarthPy, pyFLOWGO, GeoNotebook, and more. We choose to "
"develop the *PVGeo* library to work well with other Python libraries by "
"following the following framework:"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:29
msgid ""
"**Extendable:** This software will harness the established and robust "
"visualization platforms ParaView and VTK, extend their functionality, and "
"remain open-source for contributions and integration into other Python "
"powered geoscientific processing suites."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:30
msgid "**Safe:** The software must preserve data integrity and precision."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:31
msgid ""
"**Dynamic:** The software must enable a dynamic link between external "
"processing software and visualization libraries."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:32
msgid ""
"**Modular:** The software will be modular so that various visualization "
"suites can be implemented separately but also work together. This software "
"should be usable both within and outside of ParaView."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:33
msgid ""
"**Rapid development:** Through further subclasses of the "
"``VTKPythonAlgorithmBase`` class and the templates in *PVGeo*, it is easy to"
" prototype and develop a plugin in a matter of minutes without the need to "
"rebuild the software."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:34
msgid ""
"**Computational power:** VTK has NumPy wrapping to allow for the use of "
"Python's complex numerical analysis libraries like SciPy and NumPy."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:35
msgid ""
"**Easy customization by end user:** since most geoscientists know and use "
"Python, they can easily dive into the source code delivered in this repo to "
"tailor it to their needs."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:36
msgid ""
"**Easy GUI component creation:** Graphical User Interface elements can be "
"easily produced to pair with plugins."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:41
msgid "Outline of Goals"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:43
msgid ""
"Develop and document geoscientific plugins for ParaView encompassed in "
"various suites. Each suite of plugins will be tailored to specific data "
"formats and/or processing needs in geoscience. These plugins will take "
"advantage of ParaView and VTKâ€™s Python wrapping and use the Python "
"Programmable Filter in ParaView. The advantage to using Python Programmable "
"filters is that they are easily modified by the end user and can be wrapped "
"in XML to create a GUI for its use in ParaView while having the option to "
"directly edit the source code live in ParaView. The suites of plugins will "
"consist of the following plugin types:"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:45
msgid ""
"**Readers:** A reader puts data from files into proper ParaView data "
"structures on the pipeline. These are plugins that read common geoscientific"
" and geophysical spatial data files (GSLIB, UBC Tensor and OcTree meshes, "
"etc.). Also make readers that read common raw data files (packed binary "
"floats, delimited ASCII, etc.)"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:47
msgid ""
"**Filters:** A filter modifies, transforms, combines, analyses, etc. data on"
" the ParaView pipeline. Plugins that perform post-processing analysis of "
"geoscientific data for visualization. For example, filters that build tubes "
"from a series of points that represent a tunnel or filters that take a 1D "
"array, reshape it to 2D or 3D, and make a volumetric model ready for "
"visualization all while adding spatial reference for visual integration."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:49
msgid ""
"**Sources:** Plugins that create simple synthetic data sources that could be"
" used for model generation. We are creating a suite of plugins for "
"generating various types of discretized models/meshes which can be exported."
" Another example could include a sphere or cube with a specified attribute "
"like a spatially varying density or electrical conductivity. Other sources "
"might include using that synthetic sphere or cube to make a volumetric field"
" of some response. These plugins will tailor to the educational needs in "
"applications of this code base."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:51
msgid ""
"Develop and document the ``PVGeo`` and ``pvmacros`` Python modules for use "
"in ParaView's Python Shell. These modules will contain all of the macros, "
"batch processing tasks, and common codes to apply to 3D data scenes."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:53
msgid ""
"The ``PVGeo`` module will hold all of the code used in the plugins so that "
"shared features across plugins can be called rather the rewritten and so "
"that we can version control the plugins. This module will be primarily for "
"use in the plugins scripts and not necessary for use in the ParaViewPython "
"shell."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:55
msgid ""
"The ``pvmacros`` module with be full of macros and other data-independent "
"scripts that can be used directly in the ParaViewPython shell."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:57
msgid ""
"Make tutorials on the use of the tools provided by this repository as well "
"as share how to use ParaView's native features on open source data (for "
"example):"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/repo-structure.rst:59
msgid ""
"Develop customizable scripts for the visualization of common data formats. "
"This will include developing scripts on an individual basis to help others "
"quickly visualize their data and models for quality assessment and unique "
"research needs."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:2
msgid "External References"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:4
msgid ""
"Here we have compiled a list of resources and reference material for "
"learning how to use VTK in a Python environment and learning the ParaView "
"interface."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:10
msgid "VTK & Python"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:12
msgid ""
"First, brush up on `pyvista <http://docs.pyvista.org>`_. `PyVista` provides "
"a major foundation for PVGeo."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:16
msgid ""
"`Improved VTK â€“ numpy integration | Kitware Blog <https://blog.kitware.com"
"/improved-vtk-numpy-integration/>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:17
msgid ""
"`IPython Notebook & VTK | PyScience "
"<https://pyscience.wordpress.com/2014/09/03/ipython-notebook-vtk/>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:18
msgid ""
"`A VTK pipeline primer (part 1) | Kitware Blog <https://blog.kitware.com/a"
"-vtk-pipeline-primer-part-1/>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:19
msgid ""
"`vtkPythonAlgorithm is great | Kitware Blog <https://blog.kitware.com"
"/vtkpythonalgorithm-is-great/>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:20
msgid ""
"`Developing HDF5 readers using vtkPythonAlgorithm | Kitware Blog "
"<https://blog.kitware.com/developing-hdf5-readers-using-"
"vtkpythonalgorithm/>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:21
msgid ""
"`VTK/Tutorials/New Pipeline - KitwarePublic "
"<https://www.vtk.org/Wiki/VTK/Tutorials/New_Pipeline>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:22
msgid ""
"`VTK Python Examples <https://lorensen.github.io/VTKExamples/site/Python/>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:23
msgid ""
"`Create virtual environments for python with conda <https://uoa-"
"eresearch.github.io/eresearch-cookbook/recipe/2014/11/20/conda/>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:24
msgid ""
"`ParaView/Simple ParaView 3 Python Filters - KitwarePublic "
"<https://www.paraview.org/Wiki/ParaView/Simple_ParaView_3_Python_Filters>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:25
msgid ""
"`Streaming in VTK : Time | The Kitware Blog <https://blog.kitware.com"
"/streaming-in-vtk-time/>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:29
msgid "ParaView"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:31
msgid "`The ParaView Guide <https://www.paraview.org/paraview-guide/>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:32
msgid ""
"`ParaViewWeb: Using ParaViewâ€™s Visualization and Data Analysis Capabilities "
"within Web Applications | Kitware Blog <https://blog.kitware.com"
"/paraviewweb-using-paraviews-visualization-and-data-analysis-capabilities-"
"within-web-applications/>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:33
msgid ""
"`Proxy Hints And Annotations "
"<https://www.paraview.org/ParaView/Doc/Nightly/www/cxx-"
"doc/ProxyHints.html>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/resources.rst:34
msgid ""
"`ServerManager XML Hints "
"<https://www.paraview.org/Wiki/ServerManager_XML_Hints>`_"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/snippets/composite-data-writers.rst:2
msgid "Composite Data Writers"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/snippets/composite-data-writers.rst:7
msgid ""
"This snippet was written by `Bane Sullivan`_ and was originally posted on "
"ParaView's `GitLab project snippets`_."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/snippets/composite-data-writers.rst:10
msgid ""
"The functionality using decorated ``VTKPythonAlgorithmBase`` classes as "
"ParaView plugins has a composite support option for the ``smdomain`` input "
"property that is incredibly simple to use with filter algorithms yet can be "
"tricky to use for writer algorithms."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/snippets/composite-data-writers.rst:24
msgid ""
"This solution handles altering the given filename to save out each object in"
" the composite dataset separately by saving each block out in "
"``perform_write_out``  method that is repeatedly called by ``RequestData`` "
"explicitly."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/snippets/composite-data-writers.rst:29
msgid ""
"Note that we must use the ``composite_data_supported=True`` flag for the "
"``@smproxy.writer(...)`` declaration as well as append allowable input types"
" within the algorithms ``FillInputPortInformation`` method."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/snippets/composite-data-writers.rst:82
msgid "Example"
msgstr "ä¾‹"

#: ../../PVGeo/docs/source/dev-guide/snippets/index.rst:2
msgid "Development Example Snippets"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:2
msgid "Templates"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:4
msgid ""
"Here are a few templates for various types of algorithms to provide a place "
"to start developing your own readers, filters, writers, and sources!"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:7
msgid ""
"Once you have your new algorithm implemented, head over to `this example`_ "
"to learn more about wrapping your algorithm for direct use in ParaView. "
"Through decorating a new subclass of your algorithm, you can define a user "
"interface that ParaView can easily yield to users!"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:15
msgid "Readers"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:17
msgid ""
"We've found that it is difficult to make generic templates for readers as "
"there are already so many reader base classes to choose from. If you are "
"developing a new reader, talk to one of the active developers on "
"[Slack](http://slack.pvgeo.org) and we can work with you to ensure you are "
"using an appropriate base class."
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:23
msgid "Filters"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:25
msgid "A filter that will preserve the input data type:"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:63
msgid "A filter that will alter the data type:"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:102
msgid "Need to include a data array selection in your filter? It's easy:"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:154
msgid "Writers"
msgstr ""

#: ../../PVGeo/docs/source/dev-guide/templates.rst:199
msgid "Sources"
msgstr ""
