# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2020, Bane Sullivan, http:://banesullivan.com
# This file is distributed under the same license as the PVGeo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PVGeo \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-02 00:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_add-cell-connectivity-to-points.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:37
msgid "Add Cell Connectivity To Points"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:24
msgid "Example for :class:`PVGeo.filters.AddCellConnToPoints`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:26
msgid "This filter will add **linear** cell connectivity between scattered points. You have the option to add ``VTK_LINE`` or ``VTK_POLYLINE`` connectivity. ``VTK_LINE`` connectivity makes a straight line between the points in order (either in the order by index or using a nearest neighbor calculation). The ``VTK_POLYLINE`` adds polyline connectivity between all points as one spline (either in the order by index or using a nearest neighbor calculation)."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:35
msgid "sphinx_gallery_thumbnail_number = 2"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:55
msgid "First, lets generate some points which we'd like to connect"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:90
msgid "Apply the Filter"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:92
msgid "Now that you have the points generated, lets go ahead and apply the **Add Cell Connectivity To Points** filter from *Filters->PVGeo: General Filters->Add Cell Connectivity To Points*. The output data should look really wacky and incorrectly built like the image below; this is good."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:None
#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:None
msgid "add cell connectivity to points"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:119
#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:161
#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:60
#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:94
#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:126
#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:92
#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:153
#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:200
#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:88
#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:112
#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:139
#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:81
#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:108
#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:65
#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:96
#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:80
#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:129
#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:162
#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:196
#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:73
#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:100
#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:133
#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:75
#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:104
#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:95
#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:63
#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:94
#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:92
#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:117
#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:161
#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:211
#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:251
#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:284
#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:339
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:92
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:131
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:165
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:204
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:240
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:278
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:311
#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:79
#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:81
#: ../../PVGeo/docs/source/examples/gslib/read-point-set.rst:58
#: ../../PVGeo/docs/source/examples/gslib/read-point-set.rst:89
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:58
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:93
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:126
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:159
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:191
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:217
#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:62
#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:84
#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:117
#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:154
#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:73
#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:104
#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:82
#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:120
#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:152
#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:182
#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:73
#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:104
msgid "Out:"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:132
msgid "Remember that in the script given above we shuffle the points to demonstrate that the points make a useable line but we need to reconstruct the order of the points. We do this by using the *Use Nearest Nbr Approx* checkbox; this will ensure that a useable path is generate from the points. Go ahead and use the ``nearest_nbr`` argument for the algorith. Now it looks good (see image below)!"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:175
msgid "**Total running time of the script:** ( 0 minutes  2.897 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:190
msgid ":download:`Download Python source code: add-cell-connectivity-to-points.py <add-cell-connectivity-to-points.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:196
msgid ":download:`Download Jupyter notebook: add-cell-connectivity-to-points.ipynb <add-cell-connectivity-to-points.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/add-cell-connectivity-to-points.rst:203
#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:168
#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:242
#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:198
#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:150
#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:138
#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:238
#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:175
#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:146
#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:161
#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:136
#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:381
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:353
#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:121
#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:123
#: ../../PVGeo/docs/source/examples/gslib/read-point-set.rst:131
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:259
#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:196
#: ../../PVGeo/docs/source/examples/index.rst:518
#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:146
#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:224
#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:146
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_append-cell-centers.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:58
msgid "Append Cell Centers"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:24
msgid "This example will demonstrate how to append a dataset's cell centers as a length 3 tuple array."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:26
msgid "This example demonstrates :class:`PVGeo.filters.AppendCellCenters`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:45
msgid "Use an example mesh from pyvista"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:79
msgid "Run the PVGeo algorithm"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:None
msgid "append cell centers"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:140
msgid "**Total running time of the script:** ( 0 minutes  0.922 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:155
msgid ":download:`Download Python source code: append-cell-centers.py <append-cell-centers.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/append-cell-centers.rst:161
msgid ":download:`Download Jupyter notebook: append-cell-centers.ipynb <append-cell-centers.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_array-math.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:79
msgid "Array Math"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:24
msgid "This example will demonstrate how to perform a mathematical operation between two input arrays for any given source."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:27
msgid "This filter allows the user to select two input data arrays on which to perform math operations. The input arrays are used in their order of selection for the operations."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:32
msgid "This example demos: :class:`PVGeo.filters.ArrayMath`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:52
msgid "Create some input data. This can be any `vtkDataObject`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:75
#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:76
msgid "Use the filter:"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:112
msgid "Note that the output now has three arrays"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:129
msgid "Use a custom math operation:"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:None
msgid "array math"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:214
msgid "**Total running time of the script:** ( 0 minutes  0.623 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:229
msgid ":download:`Download Python source code: array-math.py <array-math.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/array-math.rst:235
msgid ":download:`Download Jupyter notebook: array-math.ipynb <array-math.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_combine-tables.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:100
msgid "Combine Tables"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:24
msgid "This example will demonstrate how to to merge to `vtkTable` objects with the same number of rows into a single `vtkTable`."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:27
msgid "This example demos :class:`PVGeo.filters.CombineTables`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:29
msgid "Please note that this example only works on version of PyVista>=0.22.0"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:49
msgid "Create some input tables"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:170
msgid "**Total running time of the script:** ( 0 minutes  0.005 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:185
msgid ":download:`Download Python source code: combine-tables.py <combine-tables.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/combine-tables.rst:191
msgid ":download:`Download Jupyter notebook: combine-tables.ipynb <combine-tables.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_extract-array.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:121
msgid "Extract Array to Table"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:23
msgid "This example will demonstrate how to extract an array from any input data set to make a :class:`pyvista.Table` of that single data array. Aftwards, we plot a histogram of that data array."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:27
msgid "This example demos :class:`PVGeo.filters.ExtractArray`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:46
msgid "Create input data"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:63
msgid "Construct the filter"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:None
msgid "extract array"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:122
msgid "**Total running time of the script:** ( 0 minutes  0.519 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:137
msgid ":download:`Download Python source code: extract-array.py <extract-array.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-array.rst:143
msgid ":download:`Download Jupyter notebook: extract-array.ipynb <extract-array.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_extract-points.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:142
msgid "Extract Points"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:24
msgid "This example will demonstrate how to extract the points and PointData of any input data set that has valid PointData into a `vtkPolyData` object."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:27
msgid "This example demos :class:`PVGeo.filters.ExtractPoints`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:46
msgid "Have some input data source with valid PointData"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:None
#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:None
msgid "extract points"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:78
msgid "Apply the filter:"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:110
msgid "**Total running time of the script:** ( 0 minutes  0.800 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:125
msgid ":download:`Download Python source code: extract-points.py <extract-points.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/extract-points.rst:131
msgid ":download:`Download Jupyter notebook: extract-points.ipynb <extract-points.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_many-slices-along-points.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:163
msgid "Many Slices Along Points"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:24
msgid "This example will demonstrate how to slice a 3D data source along some arbitrary line or sequence of points specified in another data source to have many slices of the 3D data perpendicular to that travel path."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:28
msgid "Sometimes, we desire to take a path through a model and construct various slices along that path. This example will outline a filter we have developed to take some 3D data set on the pipeline and construct various slices of that model along an input path. The slices will be perpendicular to that path at specified intervals. In this example, we also demonstrate a filter that comes native in ParaView to slice that entire model along the travel path to have a single warped slice."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:36
msgid "This example demos :class:`PVGeo.filters.ManySlicesAlongPoints`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:40
msgid "sphinx_gallery_thumbnail_number = 3"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:61
msgid "Load a volumetric model to be sliced from pyvista's examples"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:None
#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:None
#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:None
msgid "many slices along points"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:93
msgid "Create a series of points that move through that model. These are the points we will use to slice the volume."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:142
msgid "Now we can use the **Many Slices Along Points** filter. Specify the model as the  dataset input and the points as the points input to that filter and apply the algorith. That's it! The filter should be applied and you can fine tune the number of slices to what you prefer!"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:210
msgid "**Total running time of the script:** ( 0 minutes  3.534 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:225
msgid ":download:`Download Python source code: many-slices-along-points.py <many-slices-along-points.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/many-slices-along-points.rst:231
msgid ":download:`Download Jupyter notebook: many-slices-along-points.ipynb <many-slices-along-points.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_normalize-array.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:184
msgid "Normalize Array"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:24
msgid "This example will demonstrate how to perform a normalization or any custom mathematical operation on a single data array for an input data set."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:27
msgid "This filter allow the user to select an array from the input data set to be normalized. The filter will append another array to that data set for the output. The user can specify how they want to rename the array, can choose a multiplier, and can choose from two types of common normalizations: Feature Scaling and Standard Score."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:33
msgid "This example demos :class:`PVGeo.filters.NormalizeArray`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:54
msgid "Create some input data. this can be any `vtkDataObject`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:None
#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:None
msgid "normalize array"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:147
msgid "**Total running time of the script:** ( 0 minutes  0.780 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:162
msgid ":download:`Download Python source code: normalize-array.py <normalize-array.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/normalize-array.rst:168
msgid ":download:`Download Jupyter notebook: normalize-array.ipynb <normalize-array.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_points-to-tube.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:205
msgid "Points to Tube"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:24
msgid "This example will demonstrate how to to build a tube from a set of points in `vtkPolyData`."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:27
msgid "Takes points from a `vtkPolyData` object and constructs a line of those points then builds a polygonal tube around that line with some specified radius and number of sides."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:None
#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:None
msgid "points to tube"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:118
msgid "**Total running time of the script:** ( 0 minutes  0.612 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:133
msgid ":download:`Download Python source code: points-to-tube.py <points-to-tube.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/points-to-tube.rst:139
msgid ":download:`Download Jupyter notebook: points-to-tube.ipynb <points-to-tube.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_reshape-table.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:226
msgid "Reshape Table"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:24
msgid "This example will demonstrate how to reshape an input table as though it were a 2D array."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:26
msgid "This filter will take a `vtkTable` object and reshape it. This filter essentially treats `vtkTable`s as 2D matrices and reshapes them using `numpy.reshape` in a C contiguous manner. Unfortunately, data fields will be renamed arbitrarily because VTK data arrays require a name."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:28
msgid "This example demos :class:`PVGeo.filters.ReshapeTable`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:48
msgid "Create some input table"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:78
msgid "Use the filter to reshape the table"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:109
msgid "Check the output"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:133
msgid "**Total running time of the script:** ( 0 minutes  0.006 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:148
msgid ":download:`Download Python source code: reshape-table.py <reshape-table.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/reshape-table.rst:154
msgid ":download:`Download Jupyter notebook: reshape-table.ipynb <reshape-table.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_rotate-points.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:247
msgid "Rotate Points"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:24
msgid "This example will demonstrate how to rotate points in a `vtkPolyData` object around some origin on the XY plane."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:26
msgid "THis example demos :class:`PVGeo.filters.RotatePoints`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:44
msgid "Get :class:`pyvista.PolyData` sample input to rotate"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:None
#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:None
msgid "rotate points"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:108
msgid "**Total running time of the script:** ( 0 minutes  0.554 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:123
msgid ":download:`Download Python source code: rotate-points.py <rotate-points.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/rotate-points.rst:129
msgid ":download:`Download Jupyter notebook: rotate-points.ipynb <rotate-points.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:7
#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:7
#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:7
#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:7
msgid "Computation times"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:8
msgid "**00:24.180** total execution time for **examples_filters-general** files:"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:11
msgid ":ref:`sphx_glr_examples_filters-general_voxelize-points.py` (``voxelize-points.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:11
msgid "00:12.929"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:11
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:13
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:15
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:17
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:19
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:21
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:23
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:25
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:27
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:29
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:31
#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:33
#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:11
#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:13
#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:15
#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:11
#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:13
#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:15
#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:11
#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:13
#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:15
msgid "0.0 MB"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:13
msgid ":ref:`sphx_glr_examples_filters-general_many-slices-along-points.py` (``many-slices-along-points.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:13
msgid "00:03.534"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:15
msgid ":ref:`sphx_glr_examples_filters-general_add-cell-connectivity-to-points.py` (``add-cell-connectivity-to-points.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:15
msgid "00:02.897"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:17
msgid ":ref:`sphx_glr_examples_filters-general_append-cell-centers.py` (``append-cell-centers.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:17
msgid "00:00.922"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:19
msgid ":ref:`sphx_glr_examples_filters-general_extract-points.py` (``extract-points.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:19
msgid "00:00.800"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:21
msgid ":ref:`sphx_glr_examples_filters-general_normalize-array.py` (``normalize-array.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:21
msgid "00:00.780"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:23
msgid ":ref:`sphx_glr_examples_filters-general_array-math.py` (``array-math.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:23
msgid "00:00.623"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:25
msgid ":ref:`sphx_glr_examples_filters-general_points-to-tube.py` (``points-to-tube.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:25
msgid "00:00.612"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:27
msgid ":ref:`sphx_glr_examples_filters-general_rotate-points.py` (``rotate-points.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:27
msgid "00:00.554"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:29
msgid ":ref:`sphx_glr_examples_filters-general_extract-array.py` (``extract-array.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:29
msgid "00:00.519"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:31
msgid ":ref:`sphx_glr_examples_filters-general_reshape-table.py` (``reshape-table.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:31
msgid "00:00.006"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:33
msgid ":ref:`sphx_glr_examples_filters-general_combine-tables.py` (``combine-tables.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/sg_execution_times.rst:33
msgid "00:00.005"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_filters-general_voxelize-points.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:268
msgid "Voxelize Points"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:24
msgid "This example will demonstrate how to connect a set of points defined on a regular grid to create a `vtkUnstructuredGrid` which can be used to perform volumetric operations."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:29
msgid "This example demos :class:`PVGeo.filters.VoxelizePoints`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:52
#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:44
#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:44
#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:44
msgid "Download sample data files and keep track of names:"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:70
msgid "Let's go ahead and load a simple file that has XYZ coordinates and a boolean array for fault presence. This point cloud makes some sort of regular grid, but we have forgotten the deatials of the cell spacings and local coordinate rotations."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:75
msgid "We will read in this data with ``pandas`` and send it to the :func:`PVGeo.points_to_poly_data` helper to create a :class:`pyvista.PolyData` object (essentially a point cloud)."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:135
msgid "Note that we have a :class:`pyvista.PolyData` object now which allows us to do all types of immediate plotting of our data. First, lets threshold our points as the point cloud has a bunch of zeros and ones throughout the dataspace to describe the presence of a fault."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:140
msgid "To threshold the points, we call the threshold filter directly on our data object and pass the thresholding value. We can then plot the result by calling the plot function. (Note: change the notebook parameter to ``False`` for an interactive window)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:None
#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:None
#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:None
msgid "voxelize points"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:175
msgid "Points to Voxelized Volume"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:177
msgid "The above figure is pretty cool! But its a point cloud which means out filtering options are pretty limited. Fortunately, we know that the point cloud represents some sort of regularized gridded volume of data and PVGeo has a filter to recover that volume. This will allow further volumetric operations can be performed with other PVGeo or VTK filters."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:183
msgid "Remember that these points are rotated and we do not know the cell sizes... this is okay! The VoxelizePoints filter from PVGeo will handle the recovery of the coordinate rotation and grid our data without running an interpolation scheme. The VoxelizePoints filter assumes that the points are structured on some rotated XY-plane with regular cell spacings and does the rest on its own! Check out VoxelizePoints code docs for more details. The full pipeline method"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:232
msgid "And now we can plot the voxelized volume"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:265
msgid "Filter Volumetric Data"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:267
msgid "Now lets use one of `PyVista`'s filters to create slices of the thresholded dataset. Specifically, we are using the ``slice_orthogonal`` filter that will create 3 orthogonal slices through a data volume."
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:300
msgid "And let's use a ``clip`` filter:"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:317
msgid "Now display the slices and clipped volume"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:353
msgid "**Total running time of the script:** ( 0 minutes  12.929 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:368
msgid ":download:`Download Python source code: voxelize-points.py <voxelize-points.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/filters-general/voxelize-points.rst:374
msgid ":download:`Download Jupyter notebook: voxelize-points.ipynb <voxelize-points.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_grids_extract-topography.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:301
msgid "Extract Topography"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:24
msgid "This example will demonstrate how to add a cell data field to an input data set that defines whether that cell should be active. The activity of the cell is determined by whether it is beneath and input topography surface."
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:29
msgid "This filter adds a new cell data field to an input data source defining whether that cell is beneath some input topography surface."
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:32
msgid "This example demos :class:`PVGeo.grids.ExtractTopography`"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:34
msgid "We add a cell data field to the input data set as this allows us to use a wide range of input data types. We also add this data array as it will enable users to create model discretizations within ParaView for export to external processing software that need the entire model discretization with an active cells field."
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:60
msgid "For the grid data set, let's use one of the Model Building sources with the following parameters:"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:63
msgid "Origin: ``[793000, 9192500, 2690]``"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:64
msgid "X Cells: ``'1000 500 50*250 500 1000'``"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:65
msgid "Y Cells: ``'1000 500 55*250 500 1000'``"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:66
msgid "Z Cells: ``'30*100.0 5*250.0 500'``"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:None
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:None
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:None
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:None
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:None
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:None
#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:None
msgid "extract topography"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:105
msgid "Now load the topography file from the example data:"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:144
msgid "Now that you have the topography and a grid data set, let's go ahead and use the **Extract Topography** filter. Be sure to properly select the inputs to the algorithm."
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:178
msgid "op='underneath', tolerance=0.001, offset=0.0, invert=False, remove=False This will show the cells that are active underneath the topography surface (0 for above surface and 1 for below surface). Now we can threshold this gridded data set to remove parts of the model that are above the topography surface by applying a *Threshold* filter to chop out all values below 1."
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:184
msgid "The resulting grid with cells above the topography extracted will look like the rendering below:"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:217
msgid "How well did this remove cells above the topography surface?"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:253
msgid "Is that extraction too close to the topography surface? To better extract the topographic surface, you can set a tolerance:"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:291
msgid "Note that there are other extraction operations like an ``'intersection'``:"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:325
msgid "**Total running time of the script:** ( 0 minutes  8.137 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:340
msgid ":download:`Download Python source code: extract-topography.py <extract-topography.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/extract-topography.rst:346
msgid ":download:`Download Jupyter notebook: extract-topography.ipynb <extract-topography.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_grids_read-esri.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:322
msgid "Read ESRI Grid File"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:24
msgid "Read an ESRI ASCII grid file"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:43
msgid "Download a sample ESRI grid file"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:61
#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:63
msgid "Apply a filter to the DEM to have realistic topography"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:None
msgid "read esri"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:93
msgid "**Total running time of the script:** ( 0 minutes  9.961 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:108
msgid ":download:`Download Python source code: read-esri.py <read-esri.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-esri.rst:114
msgid ":download:`Download Jupyter notebook: read-esri.ipynb <read-esri.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_grids_read-surfer.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:343
msgid "Read Surfer Grid File"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:24
msgid "Read an Surfer ASCII grid file"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:43
msgid "Download a sample Surfer grid file"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:None
msgid "read surfer"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:95
msgid "**Total running time of the script:** ( 0 minutes  1.285 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:110
msgid ":download:`Download Python source code: read-surfer.py <read-surfer.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/read-surfer.rst:116
msgid ":download:`Download Jupyter notebook: read-surfer.ipynb <read-surfer.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:8
msgid "**00:19.382** total execution time for **examples_grids** files:"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:11
msgid ":ref:`sphx_glr_examples_grids_read-esri.py` (``read-esri.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:11
msgid "00:09.961"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:13
msgid ":ref:`sphx_glr_examples_grids_extract-topography.py` (``extract-topography.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:13
msgid "00:08.137"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:15
msgid ":ref:`sphx_glr_examples_grids_read-surfer.py` (``read-surfer.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/grids/sg_execution_times.rst:15
msgid "00:01.285"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-point-set.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_gslib_read-point-set.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-point-set.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:380
msgid "Read GSLib Point Set"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-point-set.rst:24
msgid "Read GSLib point set file"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-point-set.rst:None
msgid "read point set"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-point-set.rst:103
msgid "**Total running time of the script:** ( 0 minutes  0.591 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-point-set.rst:118
msgid ":download:`Download Python source code: read-point-set.py <read-point-set.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-point-set.rst:124
msgid ":download:`Download Jupyter notebook: read-point-set.ipynb <read-point-set.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_gslib_read-sgems-grid.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:401
msgid "Read SGeMS Grid"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:24
msgid "Read SGeMS Grid file formats."
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:None
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:None
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:None
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:None
#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:None
msgid "read sgems grid"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:231
msgid "**Total running time of the script:** ( 0 minutes  46.274 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:246
msgid ":download:`Download Python source code: read-sgems-grid.py <read-sgems-grid.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-sgems-grid.rst:252
msgid ":download:`Download Jupyter notebook: read-sgems-grid.ipynb <read-sgems-grid.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_gslib_read-table.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:22
#: ../../PVGeo/docs/source/examples/index.rst:422
msgid "Read GSLib Table"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:24
msgid "Read any GSLib file as a table :class:`pyvist.Table`"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:98
msgid "From inspecting the header, we realize that this dataset os gridded, so let's use the :class:`PVGeo.grid.TableToTimeGrid` filter to create a :class:`pyvista.UniformGrid` of that dataset."
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:None
msgid "read table"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:168
msgid "**Total running time of the script:** ( 0 minutes  16.179 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:183
msgid ":download:`Download Python source code: read-table.py <read-table.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/read-table.rst:189
msgid ":download:`Download Jupyter notebook: read-table.ipynb <read-table.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:8
msgid "**01:03.045** total execution time for **examples_gslib** files:"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:11
msgid ":ref:`sphx_glr_examples_gslib_read-sgems-grid.py` (``read-sgems-grid.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:11
msgid "00:46.274"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:13
msgid ":ref:`sphx_glr_examples_gslib_read-table.py` (``read-table.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:13
msgid "00:16.179"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:15
msgid ":ref:`sphx_glr_examples_gslib_read-point-set.py` (``read-point-set.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/gslib/sg_execution_times.rst:15
msgid "00:00.591"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:10
msgid "Quick Examples"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:12
msgid "Here is a gallery of all the quick examples demonstrating what ``PVGeo`` can do!"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:24
msgid "General Filters"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:37
msgid ":ref:`sphx_glr_examples_filters-general_add-cell-connectivity-to-points.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:58
msgid ":ref:`sphx_glr_examples_filters-general_append-cell-centers.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:79
msgid ":ref:`sphx_glr_examples_filters-general_array-math.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:100
msgid ":ref:`sphx_glr_examples_filters-general_combine-tables.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:121
msgid ":ref:`sphx_glr_examples_filters-general_extract-array.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:142
msgid ":ref:`sphx_glr_examples_filters-general_extract-points.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:163
msgid ":ref:`sphx_glr_examples_filters-general_many-slices-along-points.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:184
msgid ":ref:`sphx_glr_examples_filters-general_normalize-array.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:205
msgid ":ref:`sphx_glr_examples_filters-general_points-to-tube.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:226
msgid ":ref:`sphx_glr_examples_filters-general_reshape-table.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:247
msgid ":ref:`sphx_glr_examples_filters-general_rotate-points.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:268
msgid ":ref:`sphx_glr_examples_filters-general_voxelize-points.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:288
msgid "Grids"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:301
msgid ":ref:`sphx_glr_examples_grids_extract-topography.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:322
msgid ":ref:`sphx_glr_examples_grids_read-esri.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:343
msgid ":ref:`sphx_glr_examples_grids_read-surfer.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:363
msgid "GSLib"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:365
msgid "The examples shown here are downloaded from `Multiple-point Geostatistics stochastic modeling with training images <http://www.trainingimages.org/training-images-library.html>`_ website (which recently went down, so we migrated those data files to another location for download)."
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:380
msgid ":ref:`sphx_glr_examples_gslib_read-point-set.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:401
msgid ":ref:`sphx_glr_examples_gslib_read-sgems-grid.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:422
msgid ":ref:`sphx_glr_examples_gslib_read-table.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:442
msgid "UBC Data Formats"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:455
#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:22
msgid "Read UBC Gravity Observations"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:455
msgid ":ref:`sphx_glr_examples_ubc_read-grv-obs.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:476
#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:22
msgid "Read Tensor Mesh"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:476
msgid ":ref:`sphx_glr_examples_ubc_read-tensor-mesh.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:497
#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:22
msgid "Read UBC Topography File"
msgstr ""

#: ../../PVGeo/docs/source/examples/index.rst:497
msgid ":ref:`sphx_glr_examples_ubc_read-topo.py`"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_ubc_read-grv-obs.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:24
msgid "Read a UBC gravity observations file"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:None
msgid "read grv obs"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:118
msgid "**Total running time of the script:** ( 0 minutes  0.728 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:133
msgid ":download:`Download Python source code: read-grv-obs.py <read-grv-obs.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-grv-obs.rst:139
msgid ":download:`Download Jupyter notebook: read-grv-obs.ipynb <read-grv-obs.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_ubc_read-tensor-mesh.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:24
msgid "Read a UBC tensor mesh file"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:64
msgid "Read the mesh and model"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:101
msgid "Use a `PyVista` ``threshold`` filter to remove ``NaN`` data values"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:None
#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:None
#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:None
msgid "read tensor mesh"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:133
msgid "Or inspect slices of the model"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:165
msgid "Or threshold a data range"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:196
msgid "**Total running time of the script:** ( 0 minutes  3.734 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:211
msgid ":download:`Download Python source code: read-tensor-mesh.py <read-tensor-mesh.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-tensor-mesh.rst:217
msgid ":download:`Download Jupyter notebook: read-tensor-mesh.ipynb <read-tensor-mesh.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:13
msgid "Click :ref:`here <sphx_glr_download_examples_ubc_read-topo.py>` to download the full example code"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:24
msgid "Read a UBC topography file"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:None
msgid "read topo"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:118
msgid "**Total running time of the script:** ( 0 minutes  3.886 seconds)"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:133
msgid ":download:`Download Python source code: read-topo.py <read-topo.py>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/read-topo.rst:139
msgid ":download:`Download Jupyter notebook: read-topo.ipynb <read-topo.ipynb>`"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:8
msgid "**00:08.348** total execution time for **examples_ubc** files:"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:11
msgid ":ref:`sphx_glr_examples_ubc_read-topo.py` (``read-topo.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:11
msgid "00:03.886"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:13
msgid ":ref:`sphx_glr_examples_ubc_read-tensor-mesh.py` (``read-tensor-mesh.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:13
msgid "00:03.734"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:15
msgid ":ref:`sphx_glr_examples_ubc_read-grv-obs.py` (``read-grv-obs.py``)"
msgstr ""

#: ../../PVGeo/docs/source/examples/ubc/sg_execution_times.rst:15
msgid "00:00.728"
msgstr ""
