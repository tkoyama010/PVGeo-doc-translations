# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2020, Bane Sullivan, http:://banesullivan.com
# This file is distributed under the same license as the PVGeo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PVGeo\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-26 19:18+0900\n"
"PO-Revision-Date: 2021-04-26 13:59+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/112279/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../PVGeo/docs/source/about-examples.rst:4
msgid "About Examples"
msgstr "例について"

#: ../../PVGeo/docs/source/about-examples.rst:6
msgid ""
"`PVGeo` is deployed in various sub-packages called *suites*. These *suites* "
"consist of a set of reader, filter, source, or writer algorithms (or any "
"combination of those) for a general area of geoscientific processing and "
"visualization. The following sections on this page demonstrate general "
"procedures and syntax to use each type of algorithm within ParaView or "
"directly in a Python environment."
msgstr ""
"`PVGeo` は、 *suites* と呼ばれるさまざまなサブパッケージに展開されています。これらの *suites* "
"は、地球科学的な処理と視覚化の一般的な領域に対して、一連のリーダー、フィルタ、ソース、またはライター・アルゴリズム(またはそれらの任意の組合せ)で構成されています。このページの以降のセクションでは、ParaView内で、またはPython環境で直接、各タイプのアルゴリズムを使用するための一般的な手順と構文を示します。"

#: ../../PVGeo/docs/source/about-examples.rst:13
msgid ""
"Take a look at the :ref:`ref_examples` for an outline of all the available "
"examples at this time."
msgstr "現時点で利用可能なすべての例の概要については、 :ref:`ref_examples` を参照してください。"

#: ../../PVGeo/docs/source/about-examples.rst:16
msgid ""
"If you think there may be a serious problem with an example, please open an "
"issue on the `issues page`_ so that we can promptly fix it."
msgstr "例えば、深刻な問題があると思われる場合は、 `issues page`_ の問題を開いて、迅速に修正できるようにしてください。"

#: ../../PVGeo/docs/source/about-examples.rst:23
msgid "Typical Usage"
msgstr "一般的な使用方法"

#: ../../PVGeo/docs/source/about-examples.rst:25
msgid ""
"All algorithms deployed in *PVGeo* are useable in the following manners in a"
" Python environment where the algorithm can be called and instantiated with "
"keyword arguments for its parameters and then applied on some input data "
"set."
msgstr ""
"*PVGeo* "
"に展開されたすべてのアルゴリズムは、Python環境で以下の方法で使用できます。Python環境では、アルゴリズムを呼び出し、パラメータのキーワード引数でインスタンス化してから、入力データセットに適用できます。"

#: ../../PVGeo/docs/source/about-examples.rst:36
msgid ""
"Or we can instantiate the algorithm for repetitive calls if, for example, we"
" need to request varying time steps."
msgstr "あるいは、例えばさまざまな時間ステップを要求する必要がある場合に、繰り返し呼び出しのアルゴリズムをインスタンス化することもできます。"

#: ../../PVGeo/docs/source/about-examples.rst:51
msgid "Reader Algorithms"
msgstr "読み取りアルゴリズム"

#: ../../PVGeo/docs/source/about-examples.rst:53
msgid ""
"A reader takes data from files and puts them into the proper VTK data "
"structures so that we can visualize that data on the VTK or ParaView "
"pipeline. ParaView and PyVista come with a plethora of native data format "
"readers but there are still many more formats in the geosciences that have "
"not been implemented. By creating formats for common geoscientific formats, "
"we hope to make the process of getting data into the ParaView pipeline or "
"into PyVista data structures as simple as possible."
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:63
msgid ""
"The file readers in *PVGeo* are available for use in the same manner as all "
"algorithms in *PVGeo*. Readers are typically used in a manner that allows "
"the reader algorithm to be repetitively called to request various time "
"steps:"
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:81
msgid ""
"It is worth noting that if you have only one file (one time step) to read, "
"then readers can be used to immediately produce a data object:"
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:94
#: ../../PVGeo/docs/source/about-examples.rst:166
#: ../../PVGeo/docs/source/about-examples.rst:199
#: ../../PVGeo/docs/source/about-examples.rst:234
msgid "ParaView Usage"
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:96
msgid ""
"The *PVGeo* readers aren't directly available in the GUI menus of ParaView "
"but rather a dialog will appear for you to select the desired file reader "
"when selecting **File -> Open...** within ParaView like the screen recording"
" below:"
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:107
msgid "Filter Algorithms"
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:109
msgid ""
"A filter modifies, transforms, combines, analyses, processes, etc. data in "
"VTK data structures on either a VTK or ParaView pipeline. Filters provide a "
"means for changing how we visualize data or create a means of generating "
"topology for an input data source to better represent that data in a 3D "
"rendering environment."
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:114
msgid ""
"For example, we have developed a filter called Voxelize Points which takes a"
" set of scattered points sampled on a rectilinear reference frame and "
"generates voxels for every point such that the volume of data made by the "
"points is filled with topologically connected cells. Or for another filter, "
"maybe we might have a series of scattered points that we know represent the "
"center of a tunnel or tube that represents a well. We can use a filter to "
"transform those points into a connected line that we then construct a "
"cylinder around. This allows us to save out minimal data (just XYZ points as"
" opposed to complex geometries that make up the tunnel) to our hard drive "
"while still having complex visualizations from that data."
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:126
msgid ""
"Filters are typically used in a manner that parameters are set and an input "
"dataset is provided to immediately produce an output. The parameters/options"
" of the filter are set via the `**kwargs` upon construction and the input(s)"
" is/are given to the `apply()` call:"
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:146
msgid ""
"It is also worth noting that filter algorithms can be used as their own "
"entities to make repetitive calls on them much like we showed with readers:"
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:168
msgid ""
"Within ParaView, filters are available for selection directly from the GUI "
"menus when an input data source is selected on the pipeline. All of the "
"*PVGeo* filters  are available under their own categories in the **Filters**"
" menu."
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:178
msgid "Source Algorithms"
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:180
msgid ""
"A source takes input parameters from a user and generates a data object for "
"visualization or export. In *PVGeo*, we have implemented the *Model "
"Building* suite with many sources that allow for a user to specify "
"attributes of a data set such as a model discretization and have a data "
"source appear in the rendering environment alongside their other data for "
"that scene."
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:187
msgid ""
"Sources can be used like any algorithm in *PVGeo* and are typically called "
"to immediately produce an output like below:"
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:201
msgid ""
"Within ParaView, sources are available for selection directly from the GUI "
"menus. All of the *PVGeo* sources are available under their own categories "
"in the **Sources** menu."
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:210
msgid "Writer Algorithms"
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:212
msgid ""
"*PVGeo* writers take VTK data structures and write them out to the disk in a"
" non-VTK formats that might be a standard for geoscientific data. PVGeo "
"readers are often deployed with their complimentary writer equivalents such "
"that data can be imported to the pipeline using readers, transformed using "
"filters, then output to the same format in memory for use in an external "
"processing library."
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:219
msgid ""
"Writers can be used like any algorithm in *PVGeo* and are typically called "
"to immediately write out a data object like below."
msgstr ""

#: ../../PVGeo/docs/source/about-examples.rst:236
msgid ""
"Demonstrated in the following video, a user can select *File -> Save Data* "
"in ParaView with a selected dataset then choose one of *PVGeo*'s writers. "
"The first *1 minute* in the video demonstrates the *Extract Topography* then"
" the video shows how to save a ``vtkRectilinearGrid`` and its attributes to "
"the UBC Tensor Mesh/Model formats using a PVGeo writer."
msgstr ""
